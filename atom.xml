<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Somersames</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-12-03T11:19:16.150Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Somersames</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>pandas的操作使用</title>
    <link href="http://yoursite.com/2017/12/03/pandas%E7%9A%84%E6%93%8D%E4%BD%9C%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2017/12/03/pandas的操作使用/</id>
    <published>2017-12-03T10:06:32.000Z</published>
    <updated>2017-12-03T11:19:16.150Z</updated>
    
    <content type="html"><![CDATA[<h1 id="pandas读取csv文件"><a href="#pandas读取csv文件" class="headerlink" title="pandas读取csv文件"></a>pandas读取csv文件</h1><p>在pandas读里面包含了几个函数分别用来读取csv或者excel文件：<br><code>read_csv</code>方法用来读取一个csv文件一般常用参数是<code>path</code>:用于指定一个文件及其目录<br><code>sep</code>表示读取该csv文件的时候是以什么制表符读取的，一般是’,’<br><code>usecols</code>表示需要读取csv的多少列，这是一个绝对索引，0代表的是第一列，参数为一个list</p><h1 id="Pandas的结构："><a href="#Pandas的结构：" class="headerlink" title="Pandas的结构："></a>Pandas的结构：</h1><p>pandas经常使用的结构一般是dataframe和series,DataFrame类似于二维数组，或者sql里面的一张表，若在创建的时候为指定索引的话则默认从0开始一次递增为索引：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</div><div class="line">In [<span class="number">15</span>]: df_2=pd.DataFrame(data=[<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>])</div><div class="line"></div><div class="line">In [<span class="number">16</span>]: df_2</div><div class="line">Out[<span class="number">16</span>]: </div><div class="line">   <span class="number">0</span></div><div class="line"><span class="number">0</span>  a</div><div class="line"><span class="number">1</span>  b</div><div class="line"><span class="number">2</span>  c</div><div class="line">用上述方式创建的时候是不需要指定index的，但是用标量创建的时候是需要指定index的：</div><div class="line">pd.DataFrame(&#123;<span class="string">'a'</span>:<span class="string">'A'</span>,<span class="string">'b'</span>:<span class="string">'B'</span>&#125;)</div><div class="line">ValueError: If using all scalar values, you must <span class="keyword">pass</span> an index</div></pre></td></tr></table></figure></p><h1 id="基本实例："><a href="#基本实例：" class="headerlink" title="基本实例："></a>基本实例：</h1><p>读取北京2017年07月01日的空气质量情况：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"> df_20170101 =pd.read_csv(path,sep=&apos;,&apos;,decimal=&apos;,&apos;,usecols=[0,1,2,3,4,5,6,7,8,9]) #path是我的文件地址</div><div class="line">       date  hour       type  dongfour   天坛   官园  万寿西宫  奥体中心  农展馆   万柳</div><div class="line">0  20170101    22      PM2.5       469  357  476   416   453  398  468</div><div class="line">1  20170101    22  PM2.5_24h       NaN  NaN  NaN   NaN   NaN  NaN  NaN</div><div class="line">2  20170101    22       PM10       594  449  548   474   467  469  518</div><div class="line">3  20170101    22   PM10_24h       NaN  NaN  NaN   NaN   NaN  NaN  NaN</div><div class="line">4  20170101    22        AQI       494  405  484   444   469  432  479</div><div class="line">5  20170101    23      PM2.5       470  351  500   403   417  392  459</div><div class="line">6  20170101    23  PM2.5_24h       NaN  NaN  NaN   NaN   NaN  NaN  NaN</div><div class="line">7  20170101    23       PM10       558  467  583   469   443  480  529</div><div class="line">8  20170101    23   PM10_24h       NaN  NaN  NaN   NaN   NaN  NaN  NaN</div><div class="line">9  20170101    23        AQI       480  401  500   435   445  428  473</div></pre></td></tr></table></figure></p><p>假设需要获取天坛的22点到23点情况，那么只需要使用df_20170101[‘天坛’]：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">0    357</div><div class="line">1    NaN</div><div class="line">2    449</div><div class="line">3    NaN</div><div class="line">4    405</div><div class="line">5    351</div><div class="line">6    NaN</div><div class="line">7    467</div><div class="line">8    NaN</div><div class="line">9    401</div></pre></td></tr></table></figure></p><p>这就是pandas的另一种结构：series，类似于一个竖着地数组，那么假设现在需要获取天坛的22点的pm2.5<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">一种方式是知道索引:</div><div class="line">In [6]: df_20170101.loc[0][&apos;天坛&apos;]</div><div class="line">Out[6]: 357.0</div><div class="line">一种则是获取22点并且type为PM2.5的时候的天坛</div><div class="line">In [7]: df_20170101.loc[(df_20170101[&apos;hour&apos;]==22) &amp; (df_20170101[&apos;type&apos;]==&apos;PM2.5&apos;),&apos;天坛&apos;]</div><div class="line">Out[7]: </div><div class="line">0    357</div><div class="line">Name: 天坛, dtype: float64</div></pre></td></tr></table></figure></p><p>那么这个数据中有很多的NaN值，其中PM2.5_24h的值发现都为NaN，则这个值其实是可以被剔除的，那么常用的做法就是：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">In [8]: df_20170101.loc[~df_20170101[&apos;dongfour&apos;].isnull()]</div><div class="line">Out[8]: </div><div class="line">       date  hour   type  dongfour   天坛   官园  万寿西宫  奥体中心  农展馆   万柳</div><div class="line">0  20170101    22  PM2.5       469  357  476   416   453  398  468</div><div class="line">2  20170101    22   PM10       594  449  548   474   467  469  518</div><div class="line">4  20170101    22    AQI       494  405  484   444   469  432  479</div><div class="line">5  20170101    23  PM2.5       470  351  500   403   417  392  459</div><div class="line">7  20170101    23   PM10       558  467  583   469   443  480  529</div><div class="line">9  20170101    23    AQI       480  401  500   435   445  428  473</div><div class="line"></div><div class="line">至于为什么选择dongfour是因为选择其他的也是一样的，都可以，但是如果需要将NaN的值替换成0的话只需要执行</div><div class="line">In [9]: df_20170101.fillna(0)</div><div class="line">Out[9]: </div><div class="line">       date  hour       type  dongfour   天坛   官园  万寿西宫  奥体中心  农展馆   万柳</div><div class="line">0  20170101    22      PM2.5       469  357  476   416   453  398  468</div><div class="line">1  20170101    22  PM2.5_24h         0    0    0     0     0    0    0</div><div class="line">2  20170101    22       PM10       594  449  548   474   467  469  518</div><div class="line">3  20170101    22   PM10_24h         0    0    0     0     0    0    0</div><div class="line">4  20170101    22        AQI       494  405  484   444   469  432  479</div><div class="line">5  20170101    23      PM2.5       470  351  500   403   417  392  459</div><div class="line">6  20170101    23  PM2.5_24h         0    0    0     0     0    0    0</div><div class="line">7  20170101    23       PM10       558  467  583   469   443  480  529</div><div class="line">8  20170101    23   PM10_24h         0    0    0     0     0    0    0</div><div class="line">9  20170101    23        AQI       480  401  500   435   445  428  473</div><div class="line">就会将NaN值全部转为0</div></pre></td></tr></table></figure></p><h1 id="Group实例："><a href="#Group实例：" class="headerlink" title="Group实例："></a>Group实例：</h1><p>若现在需要统计dongfour的22到23点的PM2.5平均值，那么需要对type进行groupby:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">In [29]: df_20170101[&apos;dongfourmean&apos;]=df_20170101.groupby(&apos;type&apos;)[&apos;dongfour&apos;].apply(lambda x : pd.Series(np.mean(x),index=x.index))</div><div class="line"></div><div class="line">In [30]: df_20170101</div><div class="line">Out[30]: </div><div class="line">       date  hour   type  dongfour   天坛   官园  奥体中心  农展馆   万柳  dongfourmean</div><div class="line">0  20170101    22  PM2.5       469  357  476   453  398  468         469.5</div><div class="line">2  20170101    22   PM10       594  449  548   467  469  518         576.0</div><div class="line">4  20170101    22    AQI       494  405  484   469  432  479         487.0</div><div class="line">5  20170101    23  PM2.5       470  351  500   417  392  459         469.5</div><div class="line">7  20170101    23   PM10       558  467  583   443  480  529         576.0</div><div class="line">9  20170101    23    AQI       480  401  500   445  428  473         487.0</div><div class="line">因为df_20170101[&apos;dongfourmean&apos;]是一个Series所以返回的时候也是需要Series</div></pre></td></tr></table></figure></p><p>若现在需要求的是dongfour到万柳的22点的PM2.5平均值则是可以先对df_20170101进行一个转置操作：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">In [35]: df_T</div><div class="line">Out[35]: </div><div class="line">                     0         2         4         5         7         9</div><div class="line">date          20170101  20170101  20170101  20170101  20170101  20170101</div><div class="line">hour                22        22        22        23        23        23</div><div class="line">type             PM2.5      PM10       AQI     PM2.5      PM10       AQI</div><div class="line">dongfour           469       594       494       470       558       480</div><div class="line">天坛                 357       449       405       351       467       401</div><div class="line">官园                 476       548       484       500       583       500</div><div class="line">奥体中心               453       467       469       417       443       445</div><div class="line">农展馆                398       469       432       392       480       428</div><div class="line">万柳                 468       518       479       459       529       473</div><div class="line">dongfourmean     469.5       576       487     469.5       576       487</div><div class="line"></div><div class="line">In [38]: np.mean(df_T.ix[3:8][0])</div><div class="line">Out[38]: 430.60000000000002</div></pre></td></tr></table></figure></p><h1 id="注意细节："><a href="#注意细节：" class="headerlink" title="注意细节："></a>注意细节：</h1><p>pandas进行group之后是不可以在用loc进行操作的，即在pandas里面<code>GroupBy objects</code>进行一些操作的话可以采用apply，而不能使用loc<br>若非要使用loc则在使用groups之后转化成一个dataframe之后再进行一些dataframe的操作</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;pandas读取csv文件&quot;&gt;&lt;a href=&quot;#pandas读取csv文件&quot; class=&quot;headerlink&quot; title=&quot;pandas读取csv文件&quot;&gt;&lt;/a&gt;pandas读取csv文件&lt;/h1&gt;&lt;p&gt;在pandas读里面包含了几个函数分别用来读取csv
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>关于流和多态的一些记录</title>
    <link href="http://yoursite.com/2017/11/10/%E5%85%B3%E4%BA%8E%E6%B5%81%E5%92%8C%E5%A4%9A%E6%80%81%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2017/11/10/关于流和多态的一些记录/</id>
    <published>2017-11-10T04:59:13.000Z</published>
    <updated>2017-11-10T11:51:58.158Z</updated>
    
    <content type="html"><![CDATA[<h1 id="流的读取问题"><a href="#流的读取问题" class="headerlink" title="流的读取问题"></a>流的读取问题</h1><h2 id="read-方法"><a href="#read-方法" class="headerlink" title="read()方法"></a>read()方法</h2><p>read()方法经常用于读取一个byte数组或者char数组，其内部的方法如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">(<span class="keyword">byte</span> b[])</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line">    <span class="keyword">return</span> in.read(b, <span class="number">0</span>, b.length);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>首先在读取字节流的时候是所有的字节流的顶级类的是InputStream<strong>抽象类</strong>，而继承自Inputstream的类都是带有read方法，每一个类几乎丢重写了自己的read方法，而这就是多态的一种体现。</p><h2 id="关于socket-getInputStream-方法获取的InputStream"><a href="#关于socket-getInputStream-方法获取的InputStream" class="headerlink" title="关于socket.getInputStream()方法获取的InputStream"></a>关于socket.getInputStream()方法获取的InputStream</h2><p>这个获取的输入流是<code>SocketInputStream</code>,在这个类里面有一个变量就是<code>private boolean eof;</code><br>这个变量在read方法中可以用于判断文件是否已经到尾了<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">(<span class="keyword">byte</span> b[], <span class="keyword">int</span> off, <span class="keyword">int</span> length, <span class="keyword">int</span> timeout)</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line">        <span class="keyword">int</span> n;</div><div class="line"></div><div class="line">        <span class="comment">// EOF already encountered</span></div><div class="line">        <span class="keyword">if</span> (eof) &#123;</div><div class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</div><div class="line">        &#125;</div><div class="line">      <span class="comment">//省略后面方法</span></div><div class="line">    &#125;</div></pre></td></tr></table></figure></p><h1 id="多态："><a href="#多态：" class="headerlink" title="多态："></a>多态：</h1><p>其实在java的字节流处理类中就很好的利用了多态，以前只是了解但是实际使用的不多。而且最重要的是父类的静态变量子类是可以直接继承过来的</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;流的读取问题&quot;&gt;&lt;a href=&quot;#流的读取问题&quot; class=&quot;headerlink&quot; title=&quot;流的读取问题&quot;&gt;&lt;/a&gt;流的读取问题&lt;/h1&gt;&lt;h2 id=&quot;read-方法&quot;&gt;&lt;a href=&quot;#read-方法&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>关于Java的HashMap</title>
    <link href="http://yoursite.com/2017/11/09/%E5%85%B3%E4%BA%8EJava%E7%9A%84HashMap/"/>
    <id>http://yoursite.com/2017/11/09/关于Java的HashMap/</id>
    <published>2017-11-09T14:40:38.000Z</published>
    <updated>2017-11-09T14:46:06.478Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Map接口："><a href="#Map接口：" class="headerlink" title="Map接口："></a>Map接口：</h1><ol><li>在map接口中的存在一个主接口：<code>public interface Map</code> 和一个内部接口：<code>interface Entry</code></li><li>其中<em>Map接口</em>主要功能是提供map的一些基本的操作，例如put,inEmpty,get等，而<em>Entry接口</em>则主要是负责遍历操作时的一些方法，例如<code>getKey(),getValue()，setValue</code>等</li></ol><p>#HashMap实现类：</p><ol><li>在HaspMap这个类里面其实包含了很多的内部类：如下图：<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">Node</div><div class="line">HashMap</div><div class="line">KeySet</div><div class="line">KeySpliterator</div><div class="line">EntrySet</div><div class="line">Values</div><div class="line">HashIterator</div><div class="line">KeyIterator</div><div class="line">ValueIterator</div><div class="line">EntryIterator</div><div class="line">HashMapSpliterator</div><div class="line">ValueSpliterator</div><div class="line">EntrySpliterator</div><div class="line">TreeNode</div></pre></td></tr></table></figure></li></ol><h2 id="TreeNode类：-TreeNode类是一个红黑树：里面包含的是一些红黑树的操作；"><a href="#TreeNode类：-TreeNode类是一个红黑树：里面包含的是一些红黑树的操作；" class="headerlink" title="TreeNode类： TreeNode类是一个红黑树：里面包含的是一些红黑树的操作；"></a>TreeNode类： TreeNode类是一个红黑树：里面包含的是一些红黑树的操作；</h2><h2 id="EntrySet类：-EntrySet类是提供一个HashMap的遍历方式的一个类，EntrySet类里面有iterator方法，其作用在于map的一种遍历方式："><a href="#EntrySet类：-EntrySet类是提供一个HashMap的遍历方式的一个类，EntrySet类里面有iterator方法，其作用在于map的一种遍历方式：" class="headerlink" title="EntrySet类： EntrySet类是提供一个HashMap的遍历方式的一个类，EntrySet类里面有iterator方法，其作用在于map的一种遍历方式："></a>EntrySet类： EntrySet类是提供一个HashMap的遍历方式的一个类，EntrySet类里面有iterator方法，其作用在于map的一种遍历方式：</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Iterator iterator =map.entrySet().iterator();</div><div class="line"><span class="keyword">while</span> (iterator.hasNext())&#123;</div><div class="line">    Map.Entry&lt;Object,Object&gt; map1 = (Map.Entry&lt;Object, Object&gt;) iterator.next();</div><div class="line">    System.out.println(map1.getKey());</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>这里涉及的知识是EntrySet是继承了AbstractSet间接实现了Set接口，而map.entrySet()方法返回的是一个Set<map.entry<k,v>&gt;这个实例。</map.entry<k,v></p><h2 id="其他的暂时还不知道有什么用"><a href="#其他的暂时还不知道有什么用" class="headerlink" title="其他的暂时还不知道有什么用"></a>其他的暂时还不知道有什么用</h2><h1 id="关于HashMap的其他细节"><a href="#关于HashMap的其他细节" class="headerlink" title="关于HashMap的其他细节"></a><strong>关于HashMap的其他细节</strong></h1><h3 id="每一扩容都是2的n次方："><a href="#每一扩容都是2的n次方：" class="headerlink" title="每一扩容都是2的n次方："></a>每一扩容都是2的n次方：</h3><p>首先为什么每一次都是2的n次方这是由于hash函数导致的，假设一个值是1001，那么另一个值可以是1101,1011,1111，这三种情况做且运算的话结果都是1001，发生了三次碰撞，那么假设固定值是2的n次方的话，减一之后是1111，折三个数与其做且运算的话都不会相同，所以会较小碰撞次数。</p><h3 id="允许null作为键-值"><a href="#允许null作为键-值" class="headerlink" title="允许null作为键/值"></a>允许null作为键/值</h3><p>那么直接看代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> V <span class="title">get</span><span class="params">(Object key)</span> </span>&#123;</div><div class="line">     Node&lt;K,V&gt; e;</div><div class="line">     <span class="keyword">return</span> (e = getNode(hash(key), key)) == <span class="keyword">null</span> ? <span class="keyword">null</span> : e.value;</div><div class="line"> &#125;</div><div class="line"> <span class="function"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> <span class="title">hash</span><span class="params">(Object key)</span> </span>&#123;</div><div class="line">     <span class="keyword">int</span> h;</div><div class="line">     <span class="keyword">return</span> (key == <span class="keyword">null</span>) ? <span class="number">0</span> : (h = key.hashCode()) ^ (h &gt;&gt;&gt; <span class="number">16</span>);</div><div class="line"> &#125;</div><div class="line"> <span class="function"><span class="keyword">final</span> Node&lt;K,V&gt; <span class="title">getNode</span><span class="params">(<span class="keyword">int</span> hash, Object key)</span> </span>&#123;</div><div class="line">     Node&lt;K,V&gt;[] tab; Node&lt;K,V&gt; first, e; <span class="keyword">int</span> n; K k;</div><div class="line">     <span class="keyword">if</span> ((tab = table) != <span class="keyword">null</span> &amp;&amp; (n = tab.length) &gt; <span class="number">0</span> &amp;&amp;</div><div class="line">         (first = tab[(n - <span class="number">1</span>) &amp; hash]) != <span class="keyword">null</span>) &#123;</div><div class="line">         <span class="keyword">if</span> (first.hash == hash &amp;&amp; <span class="comment">// always check first node</span></div><div class="line">             ((k = first.key) == key || (key != <span class="keyword">null</span> &amp;&amp; key.equals(k))))</div><div class="line">             <span class="keyword">return</span> first;</div><div class="line">         <span class="keyword">if</span> ((e = first.next) != <span class="keyword">null</span>) &#123;</div><div class="line">             <span class="keyword">if</span> (first <span class="keyword">instanceof</span> TreeNode)</div><div class="line">                 <span class="keyword">return</span> ((TreeNode&lt;K,V&gt;)first).getTreeNode(hash, key);</div><div class="line">             <span class="keyword">do</span> &#123;</div><div class="line">                 <span class="keyword">if</span> (e.hash == hash &amp;&amp;</div><div class="line">                     ((k = e.key) == key || (key != <span class="keyword">null</span> &amp;&amp; key.equals(k))))</div><div class="line">                     <span class="keyword">return</span> e;</div><div class="line">             &#125; <span class="keyword">while</span> ((e = e.next) != <span class="keyword">null</span>);</div><div class="line">         &#125;</div><div class="line">     &#125;</div><div class="line">     <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line"> &#125;</div></pre></td></tr></table></figure></p><p>很明显当我们传入的参数是null得时候hash的值是0的时候<code>first = tab[(n - 1) &amp; hash]</code>这个first永远是tab[0];但是又由于tab的长度是2的n次方,所以tab[0]肯定是null，所以当键是null的时候得到的也是null。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Map接口：&quot;&gt;&lt;a href=&quot;#Map接口：&quot; class=&quot;headerlink&quot; title=&quot;Map接口：&quot;&gt;&lt;/a&gt;Map接口：&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;在map接口中的存在一个主接口：&lt;code&gt;public interface Map&lt;/code
      
    
    </summary>
    
      <category term="Java" scheme="http://yoursite.com/categories/Java/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="集合" scheme="http://yoursite.com/tags/%E9%9B%86%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>关于ArrayList的所见所想</title>
    <link href="http://yoursite.com/2017/11/07/%E5%85%B3%E4%BA%8EArrayLIst%E7%9A%84%E6%89%80%E8%A7%81%E6%89%80%E6%83%B3/"/>
    <id>http://yoursite.com/2017/11/07/关于ArrayLIst的所见所想/</id>
    <published>2017-11-07T13:46:25.000Z</published>
    <updated>2017-11-09T14:34:25.019Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关于ArrrayList扩容："><a href="#关于ArrrayList扩容：" class="headerlink" title="关于ArrrayList扩容："></a>关于ArrrayList扩容：</h1><blockquote><p>今天在面试的时候面试官提到过ArrayList扩容是原来的1.5倍加一，但是我看jdk1.8的时候是显示为1.5倍</p><h3 id="查看源码："><a href="#查看源码：" class="headerlink" title="查看源码："></a>查看源码：</h3> <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//Java1.8的扩容方法</span></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">grow</span><span class="params">(<span class="keyword">int</span> minCapacity)</span> </span>&#123;</div><div class="line">       <span class="comment">// overflow-conscious code</span></div><div class="line">       <span class="keyword">int</span> oldCapacity = elementData.length;</div><div class="line">       <span class="keyword">int</span> newCapacity = oldCapacity + (oldCapacity &gt;&gt; <span class="number">1</span>);</div><div class="line">       <span class="keyword">if</span> (newCapacity - minCapacity &lt; <span class="number">0</span>)</div><div class="line">           newCapacity = minCapacity;</div><div class="line">       <span class="keyword">if</span> (newCapacity - MAX_ARRAY_SIZE &gt; <span class="number">0</span>)</div><div class="line">           newCapacity = hugeCapacity(minCapacity);</div><div class="line">       <span class="comment">// minCapacity is usually close to size, so this is a win:</span></div><div class="line">       elementData = Arrays.copyOf(elementData, newCapacity);</div><div class="line">   &#125;</div></pre></td></tr></table></figure></blockquote><p> 那么ArrayList会是扩充1.5倍之后加一呢？</p><blockquote><p>于是翻看以前的jdk源码，发现在jdk1.6的时候其代码确实是+1了<br> <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// java1.6版本的扩容方法</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ensureCapacity</span><span class="params">(<span class="keyword">int</span> minCapacity)</span> </span>&#123;</div><div class="line">       modCount++;</div><div class="line">       <span class="keyword">int</span> oldCapacity = elementData.length;</div><div class="line">       <span class="keyword">if</span> (minCapacity &gt; oldCapacity) &#123;</div><div class="line">           Object oldData[] = elementData;</div><div class="line">           <span class="keyword">int</span> newCapacity = (oldCapacity * <span class="number">3</span>)/<span class="number">2</span> + <span class="number">1</span>;</div><div class="line">           <span class="keyword">if</span> (newCapacity &lt; minCapacity)</div><div class="line">               newCapacity = minCapacity;</div><div class="line">           <span class="comment">// minCapacity is usually close to size, so this is a win:</span></div><div class="line">           elementData = Arrays.copyOf(elementData, newCapacity);</div><div class="line">       &#125;</div><div class="line">   &#125;</div></pre></td></tr></table></figure></p></blockquote><h1 id="关于其扩容具体做法："><a href="#关于其扩容具体做法：" class="headerlink" title="关于其扩容具体做法："></a>关于其扩容具体做法：</h1><h3 id="jdk1-8"><a href="#jdk1-8" class="headerlink" title="jdk1.8"></a>jdk1.8</h3><p> 其次再jdk1.8中的ArrayList的一些分析：<br> 首先需要向List中添加元素的时候：</p><blockquote><p>调用 boolean add(E e);<br> 这个方法首先会调用 ensureCapacityInternal(int)方法<br> <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ensureCapacityInternal</span><span class="params">(<span class="keyword">int</span> minCapacity)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (elementData == DEFAULTCAPACITY_EMPTY_ELEMENTDATA) &#123;</div><div class="line">        minCapacity = Math.max(DEFAULT_CAPACITY, minCapacity);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    ensureExplicitCapacity(minCapacity);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p></blockquote><p> 当第一次调用的时候因为在构造方法里面已经将设置为’elementData == DEFAULTCAPACITY_EMPTY_ELEMENTDATA’<br> 所以第一次调用的时候是直接接着调用’private void ensureExplicitCapacity(int minCapacity)’方法。<br> 但是这里会发现一个问题就是jdk1.8并未提供初始的默认值，<br> 在jdk1.6中ArrayList的构造方法：<br> <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="title">ArrayList</span><span class="params">()</span> </span>&#123;</div><div class="line">      <span class="keyword">this</span>(<span class="number">10</span>);</div><div class="line">  &#125;</div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="title">ArrayList</span><span class="params">(<span class="keyword">int</span> initialCapacity)</span> </span>&#123;</div><div class="line">      <span class="keyword">super</span>();</div><div class="line">      <span class="keyword">if</span> (initialCapacity &lt; <span class="number">0</span>)</div><div class="line">          <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Illegal Capacity: "</span>+</div><div class="line">                                             initialCapacity);</div><div class="line">      <span class="keyword">this</span>.elementData = <span class="keyword">new</span> Object[initialCapacity];</div><div class="line">  &#125;</div></pre></td></tr></table></figure></p><p> 但是在jdk1.8中却并未有默认的初始值：<br> <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="title">ArrayList</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">this</span>.elementData = DEFAULTCAPACITY_EMPTY_ELEMENTDATA;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p> 而是提供了一个修改容量的方法：<br> <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ensureCapacity</span><span class="params">(<span class="keyword">int</span> minCapacity)</span> </span>&#123;</div><div class="line">       <span class="keyword">int</span> minExpand = (elementData != DEFAULTCAPACITY_EMPTY_ELEMENTDATA)</div><div class="line">           <span class="comment">// any size if not default element table</span></div><div class="line">           ? <span class="number">0</span></div><div class="line">           <span class="comment">// larger than default for default empty table. It's already</span></div><div class="line">           <span class="comment">// supposed to be at default size.</span></div><div class="line">           : DEFAULT_CAPACITY;</div><div class="line"></div><div class="line">       <span class="keyword">if</span> (minCapacity &gt; minExpand) &#123;</div><div class="line">           ensureExplicitCapacity(minCapacity);</div><div class="line">       &#125;</div><div class="line">   &#125;</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;关于ArrrayList扩容：&quot;&gt;&lt;a href=&quot;#关于ArrrayList扩容：&quot; class=&quot;headerlink&quot; title=&quot;关于ArrrayList扩容：&quot;&gt;&lt;/a&gt;关于ArrrayList扩容：&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;今天在面试
      
    
    </summary>
    
      <category term="Java" scheme="http://yoursite.com/categories/Java/"/>
    
    
      <category term="java集合" scheme="http://yoursite.com/tags/java%E9%9B%86%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>安装hexo的一些注意事项</title>
    <link href="http://yoursite.com/2017/11/06/%E5%AE%89%E8%A3%85hexo%E7%9A%84%E4%B8%80%E4%BA%9B%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
    <id>http://yoursite.com/2017/11/06/安装hexo的一些注意事项/</id>
    <published>2017-11-06T14:09:05.000Z</published>
    <updated>2017-11-06T14:28:03.426Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装步骤："><a href="#安装步骤：" class="headerlink" title="安装步骤："></a>安装步骤：</h1><ol><li>首先安装npm — </li><li>然后安装hexo    <code>npm install hexo-cli -g</code></li><li>初始化一个hexo项目  <code>hexo init blog</code></li><li>添加配置文件  <code>pm install --save hexo-renderer-jade hexo-renderer-scss hexo-generator-feed                         hexo-generator-sitemap hexo-browsersync hexo-generator-archive</code></li><li>安装 <code>npm install</code></li></ol><h1 id="添加主题文件"><a href="#添加主题文件" class="headerlink" title="添加主题文件:"></a>添加主题文件:</h1><ul><li>在github上找出自己喜欢的一个主题</li><li>用git命令clone下来</li><li>将文件放到themes文件夹，然后修改hexo文件的_config.yml</li><li>将themes文件夹里面的那个主题名称添加到theme这个标签之后</li><li>可以在theme文件夹里面修改_config.yml这个文件来获得想要的效果</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;安装步骤：&quot;&gt;&lt;a href=&quot;#安装步骤：&quot; class=&quot;headerlink&quot; title=&quot;安装步骤：&quot;&gt;&lt;/a&gt;安装步骤：&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;首先安装npm — &lt;/li&gt;
&lt;li&gt;然后安装hexo    &lt;code&gt;npm install he
      
    
    </summary>
    
      <category term="hexo相关" scheme="http://yoursite.com/categories/hexo%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="个人记录" scheme="http://yoursite.com/tags/%E4%B8%AA%E4%BA%BA%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>文章题目</title>
    <link href="http://yoursite.com/2017/11/05/%E6%B5%8B%E8%AF%95%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2017/11/05/测试博客/</id>
    <published>2017-11-05T14:52:23.000Z</published>
    <updated>2017-11-06T05:00:07.932Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="测试使用" scheme="http://yoursite.com/categories/%E6%B5%8B%E8%AF%95%E4%BD%BF%E7%94%A8/"/>
    
    
      <category term="无聊测试" scheme="http://yoursite.com/tags/%E6%97%A0%E8%81%8A%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2017/11/05/hello-world/"/>
    <id>http://yoursite.com/2017/11/05/hello-world/</id>
    <published>2017-11-05T14:45:06.253Z</published>
    <updated>2017-11-05T14:45:06.253Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
